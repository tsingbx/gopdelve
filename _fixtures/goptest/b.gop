package main

import (
	"fmt"
	c "gop-sample/cpkag"
	ab "gop-sample/cpkag/b"
	ss "gop-sample/cpkag/b/ss"
	k "gop-sample/cpkag/k"
	myutils "gop-sample/cpkag/utils"
	g "gop-sample/gpkag"
	rootutils "gop-sample/utils"
	"os"
	"path/filepath"

	remote "github.com/liuscraft/testgomod/utils"
)

bb := 3
Ab()
ab.Ab()
ab.Ac()
ss.Ab()
ss.Bs()
fmt.Println(bb)
k.K()
k.Kk()
k.Ab()
remote.TestCsgo()
myutils.TestCsgo()
rootutils.TestCsgo()

a()
c.P()
c.Gg()
g.G()
fmt.Println("b")
fmt.Println("b")
fmt.Println("b")
fmt.Println("b")
fmt.Println("b")
fmt.Println("b")
fmt.Println("b")

// 指定绝对路径
absolutePath := "/Users/liushunshun/codings/goplus_project/gop-sample"

// 相对路径
relativePath := "../"

// 构建完整路径
fullPath := filepath.Join(absolutePath, relativePath)

// 查找文件
fileInfo, err := os.Stat(fullPath)
if err != nil {
	if os.IsNotExist(err) {
		fmt.Println("文件不存在")
	} else {
		fmt.Println("发生错误:", err)
	}
	return
}

if fileInfo.IsDir() {
	fmt.Println("找到目录:", fullPath)
} else {
	fmt.Println("找到文件:", fullPath)
}
